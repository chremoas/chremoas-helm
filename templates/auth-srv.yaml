apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace}}
  name: {{ .Release.Name }}-auth-srv
  labels:
    name: {{ .Release.Name }}-auth-srv
{{ include "chremoas-helm.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.auth_srv.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chremoas-helm.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chremoas-helm.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        name: {{ .Release.Name }}-auth-srv
    spec:
      serviceAccountName: {{ .Release.Name }}-{{ .Values.serviceAccountName }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 9 }}
    {{- end }}
      initContainers:
      # The init-certs container sends a certificate signing request to the
      # kubernetes cluster.
      # You can see pending requests using: kubectl get csr
      # CSRs can be approved using:         kubectl certificate approve <csr name>
      #
      # In addition to the client certificate and key, the init-certs entrypoint will symlink
      # the cluster CA to the certs directory.
        - name: init-certs
          image: cockroachdb/cockroach-k8s-request-cert:{{ .Values.auth_srv.initCertsVersion }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          command:
            - "/bin/ash"
            - "-ecx"
            - "/request-cert -namespace=${POD_NAMESPACE} -certs-dir=/cockroach-certs -type=client -user={{ .Values.chremoasDBUser }} -symlink-ca-from=/var/run/
    secrets/kubernetes.io/serviceaccount/ca.crt"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: client-certs
              mountPath: /cockroach-certs
      containers:
        - name: auth-srv
          image: "{{ .Values.auth_srv.image }}:{{ .Values.auth_srv.tag }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CONSUL
              value: $(HOST_IP):8500
            - name: MICRO_REGISTRY_ADDRESS
              value: $(HOST_IP):8500
            - name: MICRO_CLIENT_REQUEST_TIMEOUT
              value: 5m
            - name: MICRO_REGISTRY
              value: consul
            - name: CONFIG_NAMESPACE
              value: {{ .Release.Name }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: 0
      volumes:
        - name: client-certs
          emptyDir: {}

